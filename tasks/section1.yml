#- name: "SCORED | 1.1.1 | PATCH | Create Separate Partition for /tmp"
# Rule 1.1.1 see not_automated.yml


# List /tmp mount that is missing the 'nosuid' option and ask the sys admin to correct this in /etc/fstab
# This would be a bit tricky to automatically fix in /etc/fstab.
# - name: "SCORED | 1.1.2 | AUDIT | Set nodev option for /tmp Partition"
#   shell: mount | grep 'on /tmp' | grep -v 'nodev'
#   changed_when: false
#   failed_when: tmp_mounts_missing_nodev.stderr
#   register: tmp_mounts_missing_nodev
#   ignore_errors: yes
#   tags:
#       - level1
#       - level2
#       - audit
#       - rule_1.1.2

# - name: "SCORED | 1.1.2 | AUDIT | Set nodev option for /tmp Partition"
#   debug: var=tmp_mounts_missing_nodev.stdout_lines
#   when: tmp_mounts_missing_nodev.stdout
#   ignore_errors: yes
#   tags:
#       - level1
#       - level2
#       - audit
#       - rule_1.1.2

# - name: "SCORED | 1.1.2 | AUDIT | Set nodev option for /tmp Partition"
#   pause: prompt="/tmp is mounted without the 'nodev' option set. This is a finding. Press Enter to continue"
#   when: tmp_mounts_missing_nodev.stdout and not rhel7stig_fullauto
#   ignore_errors: yes
#   tags:
#       - level1
#       - level2
#       - audit
#       - rule_1.1.2
- name: "SCORED | 1.1.2 | AUDIT | Set nodev option for /tmp Partition"
  command: /bin/true
  ignore_errors: yes
  tags:
      - level1
      - level2
      - audit
      - rule_1.1.2

- name: "SCORED | 1.1.2 | PATCH | Set nodev option for /tmp Partition"
  command: /bin/true
  tags:
      - level1
      - level2
      - patch
      - rule_1.1.2

# - name: "SCORED | 1.1.3 | AUDIT | Set nosuid option for /tmp Partition"
#   shell: mount | grep 'on /tmp' | grep -v 'nosuid'
#   changed_when: false
#   failed_when: tmp_mounts_missing_nosuid.stderr
#   register: tmp_mounts_missing_nosuid
#   ignore_errors: yes
#   tags:
#       - level1
#       - level2
#       - audit
#       - rule_1.1.3

# - name: "SCORED | 1.1.3 | AUDIT | Set nodev option for /tmp Partition"
#   debug: var=tmp_mounts_missing_nosuid.stdout_lines
#   when: tmp_mounts_missing_nosuid.stdout
#   ignore_errors: yes
#   tags:
#       - level1
#       - level2
#       - audit
#       - rule_1.1.3

# - name: "SCORED | 1.1.3 | AUDIT | Set nodev option for /tmp Partition"
#   pause: prompt="/tmp is mounted without the 'nosuid' option set. This is a finding. Press Enter to continue"
#   when: tmp_mounts_missing_nosuid.stdout and not rhel7stig_fullauto
#   ignore_errors: yes
#   tags:
#       - level1
#       - level2
#       - audit
#       - rule_1.1.3

- name: "SCORED | 1.1.3 | PATCH | Set nosuid option for /tmp Partition"
  command: /bin/true
  tags:
      - level1
      - level2
      - patch
      - rule_1.1.3

- name: "SCORED | 1.1.4 | AUDIT | Set noexec option for /tmp Partition"
  command: /bin/true
  register: result
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level1
      - level2
      - audit
      - rule_1.1.4

- name: "SCORED | 1.1.4 | PATCH | Set noexec option for /tmp Partition"
  command: /bin/true
  tags:
      - level1
      - level2
      - patch
      - rule_1.1.4

#- name: "SCORED | 1.1.5 | PATCH | Create Separate Partition for /var"
# Rule 1.1.5 see not_automated.yml

- name: "SCORED | 1.1.6 | AUDIT | Bind Mount the /var/tmp directory to /tmp"
  shell: mount | grep "/tmp " | grep /var/tmp
  register: vartmp_bindmount_audit
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level1
      - level2
      - audit
      - rule_1.1.6

- name: "SCORED | 1.1.6 | PATCH | Bind Mount the /var/tmp directory to /tmp"
  command: /bin/true
  tags:
      - level1
      - level2
      - patch
      - rule_1.1.6

#- name: "SCORED | 1.1.7 | PATCH | Create Separate Partition for /var/log"
# Rule 1.1.7 see not_automated.yml

#- name: "SCORED | 1.1.8 | PATCH | Create Separate Partition for /var/log/audit"
# Rule 1.1.8 see not_automated.yml

#- name: "SCORED | 1.1.9 | PATCH | Create Separate Partition for /home"
# Rule 1.1.9 see not_automated.yml  command: /bin/true

- name: "SCORED | 1.1.10 | AUDIT | Add nodev Option to /home"
  command: /bin/true
  register: result
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level1
      - level2
      - audit
      - rule_1.1.10

- name: "SCORED | 1.1.10 | PATCH | Add nodev Option to /home"
  command: /bin/true
  tags:
      - level1
      - level2
      - patch
      - rule_1.1.10

- name: "NOTSCORED | 1.1.11 | AUDIT | Add nodev Option to Removable Media Partitions"
  command: /bin/true
  register: result
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level1
      - level2
      - audit
      - rule_1.1.11

- name: "NOTSCORED | 1.1.11 | PATCH | Add nodev Option to Removable Media Partitions"
  command: /bin/true
  tags:
      - level1
      - level2
      - patch
      - rule_1.1.11

- name: "NOTSCORED | 1.1.12 | AUDIT | Add noexec Option to Removable Media Partitions"
  command: /bin/true
  register: result
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level1
      - level2
      - audit
      - rule_1.1.12

- name: "NOTSCORED | 1.1.12 | PATCH | Add noexec Option to Removable Media Partitions"
  command: /bin/true
  tags:
      - level1
      - level2
      - patch
      - rule_1.1.12

- name: "NOTSCORED | 1.1.13 | AUDIT | Add nosuid Option to Removable Media Partitions"
  command: /bin/true
  register: result
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level1
      - level2
      - audit
      - rule_1.1.13

- name: "NOTSCORED | 1.1.13 | PATCH | Add nosuid Option to Removable Media Partitions"
  command: /bin/true
  tags:
      - level1
      - level2
      - patch
      - rule_1.1.13

- name: "SCORED | 1.1.14 | AUDIT | Add nodev Option to /dev/shm Partition"
  command: /bin/true
  register: result
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level1
      - level2
      - audit
      - rule_1.1.14

- name: "SCORED | 1.1.14 | PATCH | Add nodev Option to /dev/shm Partition"
  command: /bin/true
  tags:
      - level1
      - level2
      - patch
      - rule_1.1.14

- name: "SCORED | 1.1.15 | AUDIT | Add nosuid Option to /dev/shm Partition"
  command: /bin/true
  register: result
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level1
      - level2
      - audit
      - rule_1.1.15

- name: "SCORED | 1.1.15 | PATCH | Add nosuid Option to /dev/shm Partition"
  command: /bin/true
  tags:
      - level1
      - level2
      - patch
      - rule_1.1.15

- name: "SCORED | 1.1.16 | AUDIT | Add noexec Option to /dev/shm Partition"
  command: /bin/true
  register: result
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level1
      - level2
      - audit
      - rule_1.1.16

- name: "SCORED | 1.1.16 | PATCH | Add noexec Option to /dev/shm Partition"
  command: /bin/true
  tags:
      - level1
      - level2
      - patch
      - rule_1.1.16

# - name: "SCORED | 1.1.17 | PATCH | Set Sticky Bit on All World-Writable Directories"
# Rule 1.1.17 see not_automated.yml

- name: "NOTSCORED | 1.1.18 | AUDIT | Disable Mounting of cramfs Filesystems"
  shell: /sbin/lsmod | grep cramfs
  register: result
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level2
      - audit
      - rule_1.1.18

- name: "NOTSCORED | 1.1.18 | PATCH | Disable Mounting of cramfs Filesystems"
  lineinfile:
      dest=/etc/modprobe.d/CIS.conf
      create=yes
      regexp='^install cramfs'
      line='install cramfs /bin/true'
  tags:
      - level2
      - patch
      - rule_1.1.18

- name: "NOTSCORED | 1.1.19 | AUDIT | Disable Mounting of freevxfs Filesystems"
  shell: /sbin/lsmod | grep freevxfs
  register: result
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level2
      - audit
      - rule_1.1.19

- name: "NOTSCORED | 1.1.19 | PATCH | Disable Mounting of freevxfs Filesystems"
  lineinfile:
      dest=/etc/modprobe.d/CIS.conf
      create=yes
      regexp='^install freevxfs'
      line='install freevxfs /bin/true'
  tags:
      - level2
      - patch
      - rule_1.1.19

- name: "NOTSCORED | 1.1.20 | AUDIT | Disable Mounting of jffs2 Filesystems"
  shell: /sbin/lsmod | grep jffs2
  register: result
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level2
      - audit
      - rule_1.1.20

- name: "NOTSCORED | 1.1.20 | PATCH | Disable Mounting of jffs2 Filesystems"
  lineinfile:
      dest=/etc/modprobe.d/CIS.conf
      create=yes
      regexp='^install jffs2'
      line='install jffs2 /bin/true'
  tags:
      - level2
      - patch
      - rule_1.1.20

- name: "NOTSCORED | 1.1.21 | AUDIT | Disable Mounting of hfs Filesystems"
  shell: /sbin/lsmod | grep hfs
  register: result
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level2
      - audit
      - rule_1.1.21

- name: "NOTSCORED | 1.1.21 | PATCH | Disable Mounting of hfs Filesystems"
  lineinfile:
      dest=/etc/modprobe.d/CIS.conf
      create=yes
      regexp='^install hfs'
      line='install hfs /bin/true'
  tags:
      - level2
      - patch
      - rule_1.1.21

- name: "NOTSCORED | 1.1.22 | AUDIT | Disable Mounting of hfsplus Filesystems"
  shell: /sbin/lsmod | grep hfsplus
  register: result
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level2
      - audit
      - rule_1.1.22

- name: "NOTSCORED | 1.1.22 | PATCH | Disable Mounting of hfsplus Filesystems"
  lineinfile:
      dest=/etc/modprobe.d/CIS.conf
      create=yes
      regexp='^install hfsplus'
      line='install hfsplus /bin/true'
  tags:
      - level2
      - patch
      - rule_1.1.22

- name: "NOTSCORED | 1.1.23 | AUDIT | Disable Mounting of squashfs Filesystems"
  shell: /sbin/lsmod | grep squashfs
  register: result
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level2
      - audit
      - rule_1.1.23

- name: "NOTSCORED | 1.1.23 | PATCH | Disable Mounting of squashfs Filesystems"
  lineinfile:
      dest=/etc/modprobe.d/CIS.conf
      create=yes
      regexp='^install squashfs'
      line='install squashfs /bin/true'
  tags:
      - level2
      - patch
      - rule_1.1.23

- name: "NOTSCORED | 1.1.24 | AUDIT | Disable Mounting of udf Filesystems"
  shell: /sbin/lsmod | grep udf
  register: result
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level2
      - audit
      - rule_1.1.24

- name: "NOTSCORED | 1.1.24 | PATCH | Disable Mounting of udf Filesystems"
  lineinfile:
      dest=/etc/modprobe.d/CIS.conf
      create=yes
      regexp='^install udf'
      line='install udf /bin/true'
  tags:
      - level2
      - patch
      - rule_1.1.24

- name: "NOTSCORED | 1.2.1 | AUDIT | Configure Connection to the RHN RPM Repositories"
  command: /bin/true
  register: result
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level1
      - level2
      - audit
      - rule_1.2.1

- name: "NOTSCORED | 1.2.1 | PATCH | Configure Connection to the RHN RPM Repositories"
  command: /bin/true
  tags:
      - level1
      - level2
      - patch
      - rule_1.2.1

- name: "SCORED | 1.2.2 | AUDIT | Verify Red Hat GPG Key is Installed"
  command: /bin/true
  register: result
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level1
      - level2
      - audit
      - rule_1.2.2

- name: "SCORED | 1.2.2 | PATCH | Verify Red Hat GPG Key is Installed"
  command: /bin/true
  tags:
      - level1
      - level2
      - patch
      - rule_1.2.2

- name: "SCORED | 1.2.3 | AUDIT | Verify that gpgcheck is Globally Activated"
  command: /bin/true
  register: result
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level1
      - level2
      - audit
      - rule_1.2.3

- name: "SCORED | 1.2.3 | PATCH | Verify that gpgcheck is Globally Activated"
  command: /bin/true
  tags:
      - level1
      - level2
      - patch
      - rule_1.2.3

- name: "NOTSCORED | 1.2.4 | AUDIT | Disable the rhnsd Daemon"
  command: /bin/true
  register: result
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level2
      - audit
      - rule_1.2.4

- name: "NOTSCORED | 1.2.4 | PATCH | Disable the rhnsd Daemon"
  command: /bin/true
  tags:
      - level2
      - patch
      - rule_1.2.4

- name: "NOTSCORED | 1.2.5 | AUDIT | Obtain Software Package Updates with yum"
  command: /bin/true
  register: result
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level1
      - level2
      - audit
      - rule_1.2.5

- name: "NOTSCORED | 1.2.5 | PATCH | Obtain Software Package Updates with yum"
  command: /bin/true
  tags:
      - level1
      - level2
      - patch
      - rule_1.2.5

- name: "NOTSCORED | 1.2.6 | AUDIT | Verify Package Integrity Using RPM"
  command: /bin/true
  register: result
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level1
      - level2
      - audit
      - rule_1.2.6

- name: "NOTSCORED | 1.2.6 | PATCH | Verify Package Integrity Using RPM"
  command: /bin/true
  tags:
      - level1
      - level2
      - patch
      - rule_1.2.6

- name: "SCORED | 1.3.1 | AUDIT | Install AIDE"
  shell: rpm -q aide
  register: result
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level2
      - audit
      - rule_1.3.1

- name: "SCORED | 1.3.1 | PATCH | Install AIDE"
  yum:
      name=aide
      state=installed
  tags:
      - level2
      - patch
      - rule_1.3.1

- name: "SCORED | 1.3.2 | AUDIT | Implement Periodic Execution of File Integrity"
  command: grep -r aide /etc/cron.* /etc/crontab
  register: result
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level2
      - audit
      - rule_1.3.2

- name: "SCORED | 1.3.2 | PATCH | Implement Periodic Execution of File Integrity"
  shell: aide --init && mv /var/lib/aide/aide.db.new.gz /var/lib/aide/aide.db.gz
  args:
      creates: /var/lib/aide/aide.db.gz
  tags:
      - level2
      - patch
      - rule_1.3.2

- name: "SCORED | 1.3.2 | PATCH | Implement Periodic Execution of File Integrity"
  cron: 
      name="aide" weekday="*" minute=0 hour=5
      user="root" job="/usr/sbin/aide --check"
      cron_file=aide.cronjob
  tags:
      - level2
      - patch
      - rule_1.3.2

- name: "SCORED | 1.4.1 | AUDIT | Ensure SELinux is not disabled in /boot/grub2/grub.cfg"
  shell: grep "^\s*linux" /boot/grub2/grub.cfg|grep -E 'selinux|enforcing'=0
  register: result
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level2
      - audit
      - rule_1.4.1

- name: "SCORED | 1.4.1 | PATCH | Ensure SELinux is not disabled in /boot/grub2/grub.cfg"
  command: sed -i 's/selinux=0//;s/enforcing=0//' /boot/grub2/grub.cfg
  tags:
      - level2
      - patch
      - rule_1.4.1

- name: "SCORED | 1.4.2 | AUDIT | Set the SELinux State"
  shell: getenforce|grep Enforcing
  register: result
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level2
      - audit
      - rule_1.4.2

- name: "SCORED | 1.4.2 | PATCH | Set the SELinux State"
  lineinfile:
      state: present
      dest: /etc/selinux/config
      regexp: '^SELINUX='
      line: 'SELINUX=enforcing'
  tags:
      - level2
      - patch
      - rule_1.4.2

- name: "SCORED | 1.4.3 | AUDIT | Set the SELinux Policy"
  command: grep 'SELINUXTYPE=targeted' /etc/selinux/config
  register: result
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level2
      - audit
      - rule_1.4.3

- name: "SCORED | 1.4.3 | PATCH | Set the SELinux Policy"
  lineinfile:
      state: present
      dest: /etc/selinux/config
      regexp: '^SELINUXTYPE='
      line: 'SELINUXTYPE=targeted'
  tags:
      - level2
      - patch
      - rule_1.4.3

- name: "SCORED | 1.4.4 | AUDIT | Remove SETroubleshoot"
  command: rpm -q setroubleshoot
  register: result
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level2
      - audit
      - rule_1.4.4

- name: "SCORED | 1.4.4 | PATCH | Remove SETroubleshoot"
  yum: 
      name: setroubleshoot
      state: absent
  tags:
      - level2
      - patch
      - rule_1.4.4

- name: "SCORED | 1.4.5 | AUDIT | Remove MCS Translation Service (mcstrans)"
  command: rpm -q mcstrans
  register: result
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level2
      - audit
      - rule_1.4.5

- name: "SCORED | 1.4.5 | PATCH | Remove MCS Translation Service (mcstrans)"
  yum: 
      name: mcstrans
      state: absent
  tags:
      - level2
      - patch
      - rule_1.4.5

- name: "SCORED | 1.4.6 | AUDIT | Check for Unconfined Daemons"
  shell: ps -eZ | egrep "initrc" 
  register: result
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level2
      - audit
      - rule_1.4.6

- name: "SCORED | 1.4.6 | PATCH | Check for Unconfined Daemons"
  command: /bin/true
  tags:
      - level2
      - patch
      - rule_1.4.6

- name: "SCORED | 1.5.1 | AUDIT | Set User/Group Owner on /boot/grub2/grub.cfg"
  command: /bin/true
  register: result
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level1
      - level2
      - audit
      - rule_1.5.1

- name: "SCORED | 1.5.1 | PATCH | Set User/Group Owner on /boot/grub2/grub.cfg"
  command: /bin/true
  tags:
      - level1
      - level2
      - patch
      - rule_1.5.1

- name: "SCORED | 1.5.2 | AUDIT | Set Permissions on /boot/grub2/grub.cfg"
  command: /bin/true
  register: result
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level1
      - level2
      - audit
      - rule_1.5.2

- name: "SCORED | 1.5.2 | PATCH | Set Permissions on /boot/grub2/grub.cfg"
  command: /bin/true
  tags:
      - level1
      - level2
      - patch
      - rule_1.5.2

- name: "SCORED | 1.5.3 | AUDIT | Set Boot Loader Password"
  command: /bin/true
  register: result
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level1
      - level2
      - audit
      - rule_1.5.3

- name: "SCORED | 1.5.3 | PATCH | Set Boot Loader Password"
  command: /bin/true
  tags:
      - level1
      - level2
      - patch
      - rule_1.5.3

- name: "SCORED | 1.6.1 | AUDIT | Restrict Core Dumps"
  command: /bin/true
  register: result
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level1
      - level2
      - audit
      - rule_1.6.1

- name: "SCORED | 1.6.1 | PATCH | Restrict Core Dumps"
  command: /bin/true
  tags:
      - level1
      - level2
      - patch
      - rule_1.6.1

- name: "SCORED | 1.6.2 | AUDIT | Enable Randomized Virtual Memory Region Placement"
  shell: sysctl kernel.randomize_va_space | awk '{print $3}'
  changed_when: no
  always_run: yes
  register: virt_addr_space_randomization_audit
  tags:
      - level1
      - level2
      - audit
      - rule_1.6.2

- name: "SCORED | 1.6.2 | PATCH | Enable Randomized Virtual Memory Region Placement"
  sysctl:
    name=kernel.randomize_va_space
    state=present
    value=1
    reload=yes
  when: virt_addr_space_randomization_audit != 2
  tags:
      - level1
      - level2
      - patch
      - rule_1.6.2

- name: "NOTSCORED | 1.7 | AUDIT | Use the Latest OS Release"
  command: /bin/true
  register: result
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level1
      - level2
      - audit
      - rule_1.7

- name: "NOTSCORED | 1.7 | PATCH | Use the Latest OS Release"
  command: /bin/true
  tags:
      - level1
      - level2
      - patch
      - rule_1.7

